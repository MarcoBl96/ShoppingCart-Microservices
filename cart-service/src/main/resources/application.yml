server:
  port: 8083

spring:
  profiles:
    active: "dev"
  application:
    name: cart-service
  datasource:
    url: jdbc:mariadb://localhost:3306/shoppingcart_microservices
    username: root
    password: password
    driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: update

logging:
  level:
    org:
      hibernate:
        type: trace


---

spring:
  profiles: dev
eureka:
  instance:
    # Leave prefer ip address to allow the gateway inside the kubernetes cluster to find this service by it's pod ip
    preferIpAddress: true
    # The hostname of the service, to register the pod and turn it easier for the gateway to find it
    # For deploying eureka clients in Kubernetes you need to set the hostname as the same name of the service
    hostname: cart-service
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

logging.level.org.springframework.web: DEBUG
logging.level.org.springframework.datasource: DEBUG
spring.jpa.show-sql: true
spring.jpa.properties.hibernate.format_sql: true
logging.level.org.hibernate.SQL: DEBUG
---

spring:
  profiles: prod
  datasource:
    url: ${MARIADB_SERVER_ADDRESS}
eureka:
  instance:
    # Leave prefer ip address to allow the gateway inside the kubernetes cluster to find this service by it's pod ip
    preferIpAddress: true
    # The hostname of the service, to register the pod and turn it easier for the gateway to find it
    hostname: cart-service
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-0.eureka.default.svc.cluster.local:8761/eureka,http://eureka-1.eureka.default.svc.cluster.local:8761/eureka,http://eureka-2.eureka.default.svc.cluster.local:8761/eureka
